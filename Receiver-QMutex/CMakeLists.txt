CMAKE_MINIMUM_REQUIRED(VERSION 2.4)

IF(WIN32)
   SET(CMAKE_INSTALL_PREFIX "${CMAKE_BINARY_DIR}/install" CACHE PATH "Installation Directory")
   MESSAGE(STATUS "WIN32")
ELSE()
   SET(CMAKE_INSTALL_PREFIX "/usr/local" CACHE PATH "Installation Directory")
ENDIF()

PROJECT(VideoReceiver-v0.0.1)

SET (EXECUTABLE_OUTPUT_PATH  ${PROJECT_BINARY_DIR}/bin CACHE INTERNAL
  "Where to put the executables")

SET (LIBRARY_OUTPUT_PATH ${PROJECT_BINARY_DIR}/lib CACHE INTERNAL
  "Where to put the libraries")
 
IF(WIN32)
   SET (VAC_DEBUG_PREFIX "d") 
ELSE()
   SET (VAC_DEBUG_PREFIX "") 
ENDIF()

# Setup the path to load our macros
SET (CMAKE_MODULE_PATH "${UCLTK_BINARY_DIR}/CMakeModules")

# Open the property setting
SET_PROPERTY(GLOBAL PROPERTY USE_FOLDERS ON)
SET_PROPERTY(GLOBAL PROPERTY PREDEFINED_TARGETS_FOLDER "CMakeTargets")

SUBDIRS(
    Apps 
    vacClass
	ExtLibs
)

INCLUDE_DIRECTORIES (${PROJECT_BINARY_DIR})
INCLUDE_DIRECTORIES (${PROJECT_SOURCE_DIR}/vacClass/vacReceiver)

ADD_DEFINITIONS(-DQXT_STATIC)
ADD_DEFINITIONS(-DQXT_DOXYGEN_RUN)

if(COMMAND cmake_policy)
   cmake_policy(SET CMP0003 NEW)
   cmake_policy(SET CMP0015 NEW)
endif(COMMAND cmake_policy)

# For OpenCV
FIND_PACKAGE(OpenCV REQUIRED)
INCLUDE_DIRECTORIES(${OpenCV_INCLUDE_DIRS})


#FOR qt
FIND_PACKAGE(Qt4 REQUIRED)
INCLUDE (${QT_USE_FILE})
ADD_DEFINITIONS (${QT_DEFINITIONS})



